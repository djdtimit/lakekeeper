/**
 * iceberg-catalog
 * Implementation of the Iceberg REST Catalog server. 
 *
 * OpenAPI spec version: 0.4.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { UserType } from '../models/UserType';
import { HttpFile } from '../http/http';

export class BootstrapRequest {
    /**
    * Set to true if you accept LAKEKEEPER terms of use.
    */
    'acceptTermsOfUse': boolean;
    /**
    * Email of the user performing bootstrap. Optional. If not provided the server will try to parse the email from the provided token.
    */
    'userEmail'?: string | null;
    /**
    * Name of the user performing bootstrap. Optional. If not provided the server will try to parse the name from the provided token. The initial user will become the global admin.
    */
    'userName'?: string | null;
    'userType'?: UserType | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "acceptTermsOfUse",
            "baseName": "accept-terms-of-use",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "userEmail",
            "baseName": "user-email",
            "type": "string",
            "format": ""
        },
        {
            "name": "userName",
            "baseName": "user-name",
            "type": "string",
            "format": ""
        },
        {
            "name": "userType",
            "baseName": "user-type",
            "type": "UserType",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return BootstrapRequest.attributeTypeMap;
    }

    public constructor() {
    }
}


