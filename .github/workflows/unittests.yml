name: Unittests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  sqlx-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cargo sqlx-check
        run: |
          sudo apt-get install libpq-dev -y
          cargo install --version=0.7.4 sqlx-cli --no-default-features --features postgres
          cargo sqlx prepare --check --workspace -- --all-features 

  check-format:
    runs-on: ubuntu-latest
    steps:
      - run: sudo snap install --edge --classic just
      - uses: actions/checkout@v4

      - name: Cargo format
        run: just check-format

      - name: Check diff
        run: git diff --exit-code

  clippy:
    runs-on: ubuntu-latest
    steps:
      - run: sudo snap install --edge --classic just

      - uses: actions/checkout@v4

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
        env:
          RUST_CACHE_KEY_OS: rust-cache-ubuntu-latest

      - name: Cargo clippy
        run: just check-clippy


  test:
    runs-on: ubuntu-latest
    services:
      vault:
        image: hashicorp/vault:latest
        ports:
          - 1234:1234
        env:
          VAULT_DEV_ROOT_TOKEN_ID: myroot
          VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:1234
          options: >-
            --health-cmd "vault status -address http://localhost:1234"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1
        env:
          RUST_CACHE_KEY_OS: rust-cache-ubuntu-latest

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          cargo install --version=0.7.4 sqlx-cli --no-default-features --features postgres
          cd crates/iceberg-catalog
          sqlx database create
          sqlx migrate run
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      - name: Setup vault
        run: |
          export VAULT_ADDR=http://vault:1234
          vault login -address http://vault:1234 myroot
          vault auth  enable -address http://vault:1234  userpass
          echo "path \"secret/*\" { capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\"] }" > /tmp/app.hcl
          vault policy write -address http://vault:1234 app /tmp/app.hcl
          vault write -address http://vault:1234 auth/userpass/users/test password=test policies=app

      - name: Test
        run: cargo test --no-fail-fast --all-targets --all-features --workspace
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          ICEBERG_REST__VAULT_URL: http://vault:1234
          ICEBERG_REST__VAULT_USER: test
          ICEBERG_REST__VAULT_PASSWORD: test
          ICEBERG_REST__VAULT_SECRET_MOUNT: secret
      - name: Doc Test
        run: cargo test --no-fail-fast --doc --all-features --workspace
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
